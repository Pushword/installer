#!/bin/bash

# Use it :
# ./installer ./my-folder

: ${1?failure: in wich folder should i work ?}
folder=$1
echo "Installation running in folder $folder"

# First clean the folder where we will install
rm -rf ${folder}

# Install symfony
composer create-project symfony/skeleton ${folder}  ^5.2 -q
cd ${folder}

composer require pushword/installer -q
sed -i -e 's/"scripts": {/"scripts": {\n        "post-package-install": \[\n            "Pushword\\\\\Installer\\\\\PostInstall::postPackageInstall"\n        \],/' composer.json
sed -i -e 's/"post-update-cmd": \[/"post-update-cmd": \[\n            "Pushword\\\\\Installer\\\\\PostInstall::beforeCacheClear",/' composer.json

# Enable flex recipes from contrib repo
composer config extra.symfony.allow-contrib true

# Get Pushword
composer require pushword/core -q
composer require pushword/skeleton symfony/profiler-pack --dev -q
# Install profiler (not installer by symfony skeleton ?!)

# We copy pushword config to easily edit it later manually
cp vendor/pushword/installer/src/pushword.yaml config/packages/pushword.yaml

# Copy Default Media
cp -r vendor/pushword/skeleton/media~ media

# Copy Entities
cp -R vendor/pushword/skeleton/src/Entity/. src/Entity
cp -R vendor/pushword/skeleton/src/DataFixtures/. src/DataFixtures


# Install sqlite by default
sed -i -e "s/DATABASE_URL=\".*\"/DATABASE_URL=\"sqlite:\/\/\/%kernel\.project_dir%\/var\/app\.db\"/" .env

## Install default routes
echo -e "pushword:\n    resource: '@PushwordCoreBundle/Resources/config/routes/all.yaml'" >config/routes.yaml

# Create Database:
php bin/console doctrine:schema:create -q
php bin/console doctrine:fixtures:load -q
php bin/console pushword:image:cache -q &

echo "Configure the SUPER ADMIN (you can skip this step pressing enter if you use flat file)"
# Add an admin user :
read -p 'Email: ' emailvar
read -sp 'Password: ' passvar
php bin/console pushword:user:create $emailvar $passvar ROLE_SUPER_ADMIN
#php bin/console pushword:user:create admin@example.tld p@ssword ROLE_SUPER_ADMIN

# Install Bundle Assets
php bin/console assets:install --symlink --relative -q

mkdir public/build && echo -e "{}" >public/build/manifest.json

# Install recommended extension
read -p "Install recommended extensions (admin, page-scanner, static-generator, svg, template-editor) ? [Y/n] " -n 1 -r
if [[ $REPLY =~ ^[Yy]$ ]]
then
    composer require pushword/admin pushword/page-scanner pushword/static-generator pushword/svg pushword/template-editor pushword/version -q
    sed -i '1s/^/page_scanner:\n    resource: "@PushwordPageScannerBundle\/PageScannerRoutes.yaml"\n/' config/routes.yaml
    sed -i '1s/^/static:\n    resource: "@PushwordStaticGeneratorBundle\/StaticRoutes.yaml"\n/' config/routes.yaml
    sed -i '1s/^/template_editor:\n    resource: "@PushwordTemplateEditorBundle\/TemplateEditorRoutes.yaml"\n/' config/routes.yaml
    sed -i '1s/^/admin:\n    resource: "@PushwordAdminBundle\/AdminRoutes.yaml"\n/' config/routes.yaml
    sed -i '1s/^/version:\n    resource: "@PushwordVersionBundle\/VersionRoutes.yaml"\n/' config/routes.yaml
fi

# Do some cleaning
rm package.json
rm -rf assets
cp -r vendor/pushword/skeleton/assets assets

sed -i -e '/"Pushword\\\\\Installer\\\\PostInstall::postPackageInstall"/d' composer.json
sed -i -e '/"Pushword\\\\\Installer\\\\PostInstall::beforeCacheClear",/d' composer.json
composer remove pushword/installer pushword/skeleton -q

# Launch Server and Play
read -p "Launch Server and play? [Y/n] " -n 1 -r
if [[ $REPLY =~ ^[Yy]$ ]]
then
    symfony server:start -d --no-tls
fi
